// src/components/admin/ModalViewContract.jsx

import React, { useEffect, useState } from "react";
import {
  Modal,
  Descriptions,
  Flex,
  Collapse,
  Timeline,
  Avatar,
  Typography,
  Form,
  Input,
  Button,
  message,
  Spin,
  Popconfirm,
  Tag,
  Select,
  Card,
  ConfigProvider
} from "antd";
import {
  getAllPurposes,
  getContractItem,
  changePurposeInContract,
  completedContract,
} from "../../lib/getData";
import ViewSteps from "./ViewSteps";
// import Title from "antd/es/typography/Title";
// import Text from "antd/es/typography/Text";
import dayjs from "dayjs";
import { Link } from "react-router-dom";
import { server } from "../../config";
import useAuth from "../../store/authStore";

const { Panel } = Collapse;
const { Text,Title } = Typography;

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è fetch ‚Üí JSON —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–∞
 */
const fetchJSON = (url, opt = {}) =>
  fetch(url, opt).then(async (r) => {
    const j = await r.json().catch(() => ({}));
    if (!r.ok) throw new Error(j.error?.message || r.statusText);
    return j;
  });

/**
 * –ó–∞–ø–∏—Å—å –ª–æ–≥–∞-¬´–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è¬ª –¥–ª—è –¥–æ–≥–æ–≤–æ—Ä–∞
 */
async function logContractAction({ contractId, text }) {
  const jwt = localStorage.getItem("jwt") || "";
  const meRes = await fetchJSON(`${server}/api/users/me`, {
    headers: { Authorization: `Bearer ${jwt}` },
  });
  await fetchJSON(`${server}/api/comments`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${jwt}`,
    },
    body: JSON.stringify({
      data: { text, contract: contractId, author: meRes.id },
    }),
  });
}

export default function ModalViewContract({
  isOpenModal,
  closeModal,
  docIdForModal,
  update,
}) {
  const { user } = useAuth((store) => store);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞
  const [contract, setContract] = useState(null);
  const [loadingContract, setLoadingContract] = useState(true);

  // –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è (–¥–ª—è Select, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ)
  const [purposeOptions, setPurposeOptions] = useState([]);

  // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (—Å–º. ¬´### –û–ë–ù–û–í–õ–ï–ù–ò–ï ###¬ª)
  const [comments, setComments] = useState([]);
  const [commentsCount, setCommentsCount] = useState(0);
  const [loadingComments, setLoadingComments] = useState(false);
  const [savingComment, setSavingComment] = useState(false);
  const [commentForm] = Form.useForm();
  const [myId, setMyId] = useState(null);

  // –°–º–µ–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π / –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞
  const [changingPurpose, setChangingPurpose] = useState(false);

  useEffect(() => {
    console.log("contract", contract);

  }, [contract])
  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

  const fetchData = async () => {
    try {
      setLoadingContract(true);

      // 1.1) –°–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä–∞
      const resContract = await getContractItem(docIdForModal);
      setContract(resContract);

      // 1.2) –°–ø–∏—Å–æ–∫ ¬´–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π¬ª (—á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å Select)
      const allPurposes = await getAllPurposes(100, 1);
      const mapped = allPurposes.data.map((p) => ({
        value: p.id,
        label: p.name,
      }));
      setPurposeOptions(mapped);

      // 1.3) –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
      const jwt = localStorage.getItem("jwt") || "";
      if (jwt) {
        const me = await fetchJSON(`${server}/api/users/me`, {
          headers: { Authorization: `Bearer ${jwt}` },
        });
        setMyId(me.id);
      }
    } catch (e) {
      console.error(e);
      message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä–∞");
    } finally {
      setLoadingContract(false);
    }
  };
  // 1) –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏ ‚Äî –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä –∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π
  useEffect(() => {
    if (!docIdForModal || !isOpenModal) return;


    fetchData();
  }, [docIdForModal, isOpenModal]);

  // 2) –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ—è–≤–∏–ª—Å—è ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
  const loadComments = async () => {
    if (!contract?.id) return;
    setLoadingComments(true);
    try {
      const url =
        `${server}/api/comments?populate[author]=true` +
        `&filters[contract][id][$eq]=${contract.id}` +
        `&sort=createdAt:asc`;
      const { data, meta } = await fetchJSON(url, {
        headers: { Authorization: `Bearer ${localStorage.getItem("jwt")}` },
      });
      setComments(data || []);
      setCommentsCount(meta.pagination.total);
    } catch (e) {
      console.error(e);
      message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏");
    } finally {
      setLoadingComments(false);
    }
  };

  useEffect(() => {
    if (contract) {
      loadComments();
    }
  }, [contract]);

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  const handleAddComment = async ({ text }) => {
    if (!text.trim()) return;
    if (!contract?.id) return message.error("ID –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω");
    setSavingComment(true);
    try {
      const body = {
        data: {
          text: text.trim(),
          contract: contract.id,
          ...(myId && { author: myId }),
        },
      };
      await fetchJSON(`${server}/api/comments`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("jwt")}`,
        },
        body: JSON.stringify(body),
      });
      commentForm.resetFields(); // ### –û–ë–ù–û–í–õ–ï–ù–ò–ï ###
      loadComments();
      // –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:
      // await logContractAction({ contractId: contract.id, text: "–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" });
    } catch (e) {
      console.error(e);
      message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π");
    } finally {
      setSavingComment(false);
    }
  };

  // –°–º–µ–Ω–∞ ¬´–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è¬ª
  const handleChangePurpose = async (newPurposeId) => {
    if (!contract) return;
    setChangingPurpose(true);
    try {
      await changePurposeInContract(contract.documentId, newPurposeId);
      await logContractAction({
        contractId: contract.id,
        text: `üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ ¬´${purposeOptions.find((p) => p.value === newPurposeId)?.label || "‚Äî"
          }¬ª`,
      });
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–ø–∏—Å–æ–∫
      const updated = await getContractItem(contract.documentId);
      setContract(updated);
      update();
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:", e);
      message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ");
    } finally {
      setChangingPurpose(false);
    }
  };

  // –ü–µ—Ä–µ–≤–æ–¥ –¥–æ–≥–æ–≤–æ—Ä–∞ –≤ –∞—Ä—Ö–∏–≤
  const handleComplete = async () => {
    if (!contract) return;
    try {
      const success = await completedContract(contract.documentId);
      if (success) {
        await logContractAction({
          contractId: contract.id,
          text: "üóÑÔ∏è –î–æ–≥–æ–≤–æ—Ä –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ –∞—Ä—Ö–∏–≤",
        });
        const updated = await getContractItem(contract.documentId);
        setContract(updated);
        update();
      }
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –≤ –∞—Ä—Ö–∏–≤:", e);
      message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –∞—Ä—Ö–∏–≤");
    }
  };

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–æ–±–∏—Ä–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

  let descriptions = null;
  if (contract) {
    descriptions = [
      {
        key: "1",
        label: "–ü—Ä–µ–¥–º–µ—Ç –¥–æ–≥–æ–≤–æ—Ä–∞",
        children: contract.description,
      },
      {
        key: "2",
        label: "–î–∞—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞",
        children: (
          <span>{dayjs(contract.dateContract).format("DD.MM.YYYY")}</span>
        ),
      },
      {
        key: "3",
        label: "–ù–æ–º–µ—Ä –¢–µ—Ö.–ó–∞–¥–∞–Ω–∏—è",
        children: contract.numberTask,
      },
      {
        key: "4",
        label: "–ü–æ–¥—Ä—è–¥—á–∏–∫",
        children: contract.contractor.name,
      },
      {
        key: "5",
        label: "–ò–ù–ù-–ö–ü–ü",
        children: `${contract.contractor.inn}-${contract.contractor.kpp}`,
      },
      {
        key: "6",
        label: "–§–∞–π–ª –¥–æ–≥–æ–≤–æ—Ä–∞",
        children: contract.document ? (
          <Link to={`${server}${contract.document.url}`} target="_blank">
            {contract.document.name}
          </Link>
        ) : (
          <Text style={{ color: "#f00" }}>—Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</Text>
        ),
      },
      {
        key: "7",
        label: "–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ",
        children:
          user?.role?.type === "readadmin" ? (
            <Tag color={contract.purpose.color}>{contract.purpose.name}</Tag>
          ) : (
            <Select
              style={{ minWidth: 300 }}
              value={contract.purpose?.id}
              onChange={handleChangePurpose}
              loading={changingPurpose}
              options={purposeOptions}
            />
          ),
      },
    ];
  }

  return (
    <Modal
      open={isOpenModal}
      onCancel={closeModal}
      title={
        !loadingContract && contract ? (
          <Flex gap={20}>
            <Text style={{ fontSize: 16 }}>–î–æ–≥–æ–≤–æ—Ä ‚Ññ{contract.number}</Text>
            <Flex>
              {contract.completed ? (
                <Tag color="volcano">–ê—Ä—Ö–∏–≤–Ω—ã–π</Tag>
              ) : (
                <Tag color="green">–í —Ä–∞–±–æ—Ç–µ</Tag>
              )}
              {contract.purpose && (
                <Tag color={contract.purpose.color}>
                  {contract.purpose.name}
                </Tag>
              )}
            </Flex>
          </Flex>
        ) : (
          "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞..."
        )
      }
      footer={false}
      width={{ xl: 900, xxl: 1400 }}
      destroyOnClose
    >
      {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
      {loadingContract ? (
        <Flex justify="center">
          <Spin />
        </Flex>
      ) : (
        contract && (
          <Flex vertical gap={20}>
            <Descriptions items={descriptions} column={1} bordered />

            {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ë–ª–æ–∫ ¬´–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏¬ª ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
            <Collapse
              style={{ marginTop: 20 }}
              ghost
              expandIconPosition="right"
            >
              <Panel
                header={`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (${commentsCount})`}
                key="comments"
                style={{ border: "1px solid #f0f0f0" }}
              >
                {loadingComments ? (
                  <Spin style={{ display: "block", margin: "24px auto" }} />
                ) : comments.length > 0 ? (
                  <Timeline
                    style={{ marginBottom: 24 }}
                    items={comments.map((c) => {
                      const name = c.author?.username ?? "‚Äî";
                      return {
                        key: c.id,
                        dot: (
                          <Avatar size={24}>
                            {name[0]?.toUpperCase() || "?"}
                          </Avatar>
                        ),
                        children: (
                          <>
                            <Text strong>{name}</Text>
                            <br />
                            <Text>{c.text}</Text>
                            <br />
                            <Text type="secondary" style={{ fontSize: 12 }}>
                              {dayjs(c.createdAt).format("DD.MM.YYYY HH:mm")}
                            </Text>
                          </>
                        ),
                      };
                    })}
                  />
                ) : (
                  <Text type="secondary">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</Text>
                )}

                {/* ‚îÄ‚îÄ‚îÄ –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è ‚îÄ‚îÄ‚îÄ */}
                <Form
                  form={commentForm} // ### –û–ë–ù–û–í–õ–ï–ù–ò–ï ###
                  layout="vertical"
                  onFinish={handleAddComment} // ### –û–ë–ù–û–í–õ–ï–ù–ò–ï ###
                >
                  <Form.Item
                    name="text"
                    rules={[
                      { required: true, message: "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è" },
                    ]}
                  >
                    <Input.TextArea rows={3} placeholder="–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π‚Ä¶" />
                  </Form.Item>
                  <Form.Item>
                    <Button
                      type="primary"
                      htmlType="submit"
                      loading={savingComment}
                      block
                    >
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                    </Button>
                  </Form.Item>
                </Form>
              </Panel>
            </Collapse>

            {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–ø–∏—Å–æ–∫ —ç—Ç–∞–ø–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
            {contract.overhaul && <Flex vertical>
              {/* <Typography.Title level={4}>–û–±—ä–µ–∫—Ç—ã –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞:</Typography.Title> */}
              <ConfigProvider
                theme={{
                  components: {
                    Collapse: {
                      headerBg: "rgba(227, 112, 33,0.2)"

                    },
                  },
                }}
              >
                {!contract.object_constructions.length > 0 &&
                  <Title level={4} style={{ color: "#f00" }}>
                    –û–±—ä–µ–∫—Ç–æ–≤ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
                  </Title>
                }
                {contract.object_constructions.length > 0 &&
                  <Collapse items={
                    contract.object_constructions.map((obj) => ({

                      key: obj.id,
                      label: <><Text style={{fontWeight:600}}>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:</Text> {obj.name}</>,
                      children: obj.steps.length === 0 ? (
                        <Title level={4} style={{ color: "#f00" }}>
                          –≠—Ç–∞–ø–æ–≤ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
                        </Title>
                      ) : (
                        <>
                          <Title level={4} >
                            –≠—Ç–∞–ø—ã:
                          </Title>
                          <ConfigProvider
                            theme={{
                              components: {
                                Collapse: {
                                  headerBg: "rgba(0,0,0,0.02)"

                                },
                              },
                            }}
                          >
                            <ViewSteps steps={obj.steps} update={()=>{fetchData()}}/>
                          </ConfigProvider>
                        </>
                      ),

                      // <Card key={obj.id} title={obj.name}>
                      // {obj.steps.length === 0 ? (
                      //   <Title level={4} style={{ color: "#f00" }}>
                      //       –≠—Ç–∞–ø–æ–≤ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
                      //     </Title>
                      //   ) : (
                      //     <ViewSteps steps={contract.steps} />
                      //   )}
                      //   </Card>
                    })
                    )}
                  />
                }
              </ConfigProvider>
            </Flex>
            }
            {!contract.overhaul && (contract.steps.length === 0 ? (
              <Title level={4} style={{ color: "#f00" }}>
                –≠—Ç–∞–ø–æ–≤ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
              </Title>
            ) : (
              <ViewSteps steps={contract.steps} update={()=>{fetchData()}} />
            ))}

            {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ö–Ω–æ–ø–∫–∞ ¬´–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –∞—Ä—Ö–∏–≤¬ª ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
            {user?.role?.type !== "readadmin" && !contract.completed && (
              <Flex>
                <Popconfirm
                  title="–î–æ–±–∞–≤–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤"
                  description="–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —ç—Ç–∞–ø—ã –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É"
                  onConfirm={() => {
                    handleComplete();
                    update();
                  }}
                  okText="–î–æ–±–∞–≤–∏—Ç—å"
                  cancelText="–ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å"
                  okType="danger"
                >
                  <Button danger>–î–æ–±–∞–≤–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤</Button>
                </Popconfirm>
              </Flex>
            )}
          </Flex>
        )
      )}
    </Modal>
  );
}